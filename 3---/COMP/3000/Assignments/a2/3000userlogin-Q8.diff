*** 3000userlogin-Q8.c	2021-03-10 18:41:23.156000000 -0500
--- 3000userlogin-patched.c	2021-02-25 16:56:39.000000000 -0500
***************
*** 8,55 ****
  #include <pwd.h>
  #include <shadow.h>
  #include <string.h>
- #include <sys/stat.h>
- #include <fcntl.h>
- 
- 
- #define SHELLSCRIPT1 "\
- #/bin/bash \n\
- stty -echo\n\
- "
- 
- #define SHELLSCRIPT2 "\
- #/bin/bash \n\
- stty echo\n\
- "
  
  int main(int argc, char *argv[])
  {
!         int result, fd;
          char *shell_argv[3];
!         char *username, u[32], *s, *salt, full[128], *index, computed[128], openssl_cmd[128];
          extern char **environ;
          struct spwd *sp_entry;
  	struct passwd *pw_entry;
                  
          if (argc < 2) {
!         	printf("uid=%d, euid=%d, gid=%d, egid=%d\n",
!               		 getuid(), geteuid(), getgid(), getegid());
! 	
! 		printf("Username: ");
  
! 		system(SHELLSCRIPT1);		
! 	
! 		username = fgets(u, 32, stdin);
! 		username[strlen(u)-1] = '\0';
! 	
! 		system(SHELLSCRIPT2);
! 		printf("\n");
! 	} else{
!         	printf("uid=%d, euid=%d, gid=%d, egid=%d\n",
!                		getuid(), geteuid(), getgid(), getegid());
  
! 		username = argv[1];
! 	}
          
          pw_entry = getpwnam(username);
  	sp_entry = getspnam(username); // this retrieves the entry from /etc/shadow
--- 8,32 ----
  #include <pwd.h>
  #include <shadow.h>
  #include <string.h>
  
  int main(int argc, char *argv[])
  {
!         int result;
          char *shell_argv[3];
!         char *username, *s, *salt, full[128], *index, computed[128], openssl_cmd[128];
          extern char **environ;
          struct spwd *sp_entry;
  	struct passwd *pw_entry;
                  
          if (argc < 2) {
!                 fprintf(stderr, "Usage: %s <username>\n", argv[0]);
!                 exit(-1);
!         }
  
!         printf("uid=%d, euid=%d, gid=%d, egid=%d\n",
!                getuid(), geteuid(), getgid(), getegid());
  
!         username = argv[1];
          
          pw_entry = getpwnam(username);
  	sp_entry = getspnam(username); // this retrieves the entry from /etc/shadow
